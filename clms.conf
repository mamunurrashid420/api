upstream auth-service {
    server 116.204.155.54:6000;
}

upstream user-service {
    server 116.204.155.54:8002;
}

upstream master-service {
    server 116.204.155.54:8003;
}

upstream location-service {
    server 116.204.155.54:8004;
}

upstream course-service {
    server 116.204.155.54:8005;
}

upstream batch-service {
    server 116.204.155.54:8006;
}

upstream circular-service {
    server 116.204.155.54:8007;
}

upstream assessment-service {
    server 116.204.155.54:8010;
}

upstream assignment-service {
    server 116.204.155.54:8011;
}

upstream book-service {
    server 116.204.155.54:8012;
}

upstream plc-service {
    server 116.204.155.54:8025;
}

upstream igt-service {
    server 116.204.155.54:8027;
}

upstream video-service {
    server 116.204.155.54:9002;
}

upstream auth-front {
    server 10.10.100.7:82;
}

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name gateway.clmsbd.com clmsbd.com trainee.clmsbd.com admin.clmsbd.com;
    return 301 https://$host$request_uri;
}

# HTTPS configuration for gateway.clmsbd.com
server {
    listen 443 ssl;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    server_name gateway.clmsbd.com;

    add_header Referrer-Policy "no-referrer" always;

    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    client_max_body_size  2560M;
    gzip_static       on;
    gzip_buffers      16 8k;
    gzip_comp_level   5;
    gzip_http_version 1.0;
    gzip_types        text/plain text/xml text/css image/x-icon image/bmp image/png image/gif image/jpeg image/jpg application/xhtml+xml application/xml application/json application/x-javascript text/javascript application/javascript;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm index.nginx-debian.html;
    }

    location /auth {
        rewrite ^/auth(.*)$ $1 break;
        proxy_pass http://auth-front;
    }

    location /auth-service {
        rewrite ^/auth-service(.*)$ $1 break;
        proxy_pass http://auth-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /user-service {
        auth_request /auth;
        rewrite ^/user-service(.*)$ $1 break;
        proxy_pass http://user-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /master-service {
        auth_request /auth;
        rewrite ^/master-service(.*)$ $1 break;
        proxy_pass http://master-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /location-service {
        auth_request /auth;
        rewrite ^/location-service(.*)$ $1 break;
        proxy_pass http://location-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /course-service {
        auth_request /auth;
        rewrite ^/course-service(.*)$ $1 break;
        proxy_pass http://course-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /batch-service {
        auth_request /auth;
        rewrite ^/batch-service(.*)$ $1 break;
        proxy_pass http://batch-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /circular-service {
        auth_request /auth;
        rewrite ^/circular-service(.*)$ $1 break;
        proxy_pass http://circular-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /assessment-service {
        auth_request /auth;
        rewrite ^/assessment-service(.*)$ $1 break;
        proxy_pass http://assessment-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /assignment-service {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            return 200;
        }
        auth_request /auth;
        rewrite ^/assignment-service(.*)$ $1 break;
        proxy_pass http://assignment-service;
        proxy_set_header Authorization $http_authorization;
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Credentials "true";
    }

    location /book-service {
        auth_request /auth;
        rewrite ^/book-service(.*)$ $1 break;
        proxy_pass http://book-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /plc-service {
        auth_request /auth;
        rewrite ^/plc-service(.*)$ $1 break;
        proxy_pass http://plc-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /igt-service {
        auth_request /auth;
        rewrite ^/igt-service(.*)$ $1 break;
        proxy_pass http://igt-service;
        proxy_set_header Authorization $http_authorization;
    }

    location /video-service {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            add_header Access-Control-Allow-Origin "$http_origin";
            add_header Access-Control-Allow-Credentials "true";
            return 200;
        }

        auth_request /auth;
        rewrite ^/video-service(.*)$ $1 break;
        proxy_pass http://video-service;
        proxy_set_header Authorization $http_authorization;
        add_header Access-Control-Allow-Credentials "true";
    }

    location = /auth {
        internal;
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            return 200;
        }

        if ($content_type !~* "application/json") {
            return 200;
        }
        proxy_pass http://auth-service/api/auth/verify;
        proxy_pass_request_body off;
        proxy_set_header Host $host;
        proxy_set_header Content-Length "";
        proxy_set_header X-URL $request_uri;
        proxy_set_header Authorization $http_authorization;
    }

    error_page 404 = @404;
    include api_errors_json.conf;
}

# HTTPS configuration for clmsbd.com
server {
    listen 443 ssl;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    server_name clmsbd.com;



    location / {
        client_max_body_size 100M;
        add_header Access-Control-Allow-Origin *;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;
        add_header X-Permitted-Cross-Domain-Policies: none;
        add_header Content-Security-Policy "object-src 'none'; frame-ancestors 'none'; sandbox allow-popups allow-forms allow-same-origin allow-scripts; base-uri 'self';";
        add_header X-Content-Security-Policy "object-src 'none'; frame-ancestors 'none'; sandbox allow-popups allow-forms allow-same-origin allow-scripts; base-uri 'self';";
        add_header X-XSS-Protection "1; mode=block";
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://116.204.155.54:3006;
    }
}

# HTTPS configuration for trainee.clmsbd.com
server {
    listen 443 ssl;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    server_name trainee.clmsbd.com;


    location / {
        proxy_pass http://116.204.155.54:4001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS configuration for admin.clmsbd.com
server {
    listen 443 ssl;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /ssl/fullchain.pem;
    ssl_certificate_key /ssl/privkey.pem;
    server_name admin.clmsbd.com;


    location / {
        proxy_pass http://116.204.155.54:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

